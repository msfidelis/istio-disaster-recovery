apiVersion: v1
kind: Namespace
metadata:
  labels:
    istio-injection: enabled
  name: payment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: payment-api
  name: payment-api
  namespace: payment
spec:
  replicas: 3
  selector:
    matchLabels:
      app: payment-api
  template:
    metadata:
      annotations:
        istio-injection: enabled
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"           
      labels:
        app: payment-api
        name: payment-api
        version: v1
    spec:
      containers:
      - name: payment-api
        image: fidelissauro/dr-payment-api:latest
        ports:
        - containerPort: 8080
          name: http
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
        startupProbe:
          failureThreshold: 10
          httpGet:
            path: /readiness
            port: 8080
          periodSeconds: 10
        livenessProbe:
          failureThreshold: 10
          httpGet:
            path: /liveness
            port: 8080
          periodSeconds: 10
        env:
        - name: CHAOS_MONKEY_ENABLED
          value: "false"  
        - name: CHAOS_MONKEY_MODE
          value: "critical" 
        - name: CHAOS_MONKEY_LATENCY
          value: "true"            
        - name: CHAOS_MONKEY_EXCEPTION
          value: "true"   
        - name: CHAOS_MONKEY_APP_KILLER
          value: "true"   
        - name: CHAOS_MONKEY_MEMORY
          value: "false"
        - name: CHAOS_MONKEY_CPU
          value: "false"
        - name: CHAOS_MONKEY_LATENCY_MIN_TIME
          value: "2000"
        - name: CHAOS_MONKEY_LATENCY_MAX_TIME
          value: "5000"          
        - name: PAYMENT_API_HOST
          value: http://payment-api.payment.svc.cluster.local:8080
        - name: CC_API_HOST
          value: http://cc-api.cc.svc.cluster.local:8080
      terminationGracePeriodSeconds: 60
---
apiVersion: v1
kind: Service
metadata:
  name: payment-api
  namespace: payment   
  labels:
    app.kubernetes.io/name: payment-api
    app.kubernetes.io/instance: payment-api 
spec:
  ports:
  - name: http-web
    port: 8080
    protocol: TCP
  selector:
    app: payment-api
  type: ClusterIP
---
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: payment-api
  namespace: payment
spec:
  maxReplicas: 12
  minReplicas: 3
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: payment-api
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: payment-api-gateway
  namespace: payment
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "api.payment.k8s.cluster"
    - "payment-api.payment.svc.cluster.local"    
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: payment-api
  namespace: payment
spec:
  hosts:
  - "api.payment.k8s.cluster"
  gateways:
  - payment-api-gateway
  http:
  - route:
    - destination:
        host: payment-api
        port:
          number: 8080
    retries:
      attempts: 3
      perTryTimeout: 500ms
      retryOn: 5xx,gateway-error,connect-failure,refused-stream          
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: payment-api-internal
  namespace: payment
spec:
  hosts:
  - "payment-api.payment.svc.cluster.local"  
  http:
  - route:
    - destination:
        host: payment-api
        port:
          number: 8080
    retries:
      attempts: 10
      perTryTimeout: 500ms
      retryOn: 5xx,gateway-error,connect-failure,refused-stream,reset,resource-exhausted,unavailable,cancelled